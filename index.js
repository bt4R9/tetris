var D=Object.defineProperty;var U=(p,t,e)=>t in p?D(p,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):p[t]=e;var n=(p,t,e)=>(U(p,typeof t!="symbol"?t+"":t,e),e),A=(p,t,e)=>{if(!t.has(p))throw TypeError("Cannot "+e)};var y=(p,t,e)=>(A(p,t,"read from private field"),e?e.call(p):t.get(p)),_=(p,t,e)=>{if(t.has(p))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(p):t.set(p,e)},z=(p,t,e,s)=>(A(p,t,"write to private field"),s?s.call(p,e):t.set(p,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const h of r.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&s(h)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();const P=0,C=1;class B{constructor(){n(this,"width",15);n(this,"height",30);n(this,"grid");n(this,"shape",null);n(this,"collapsed",null);this.grid=[],this.clean()}clean(){for(let t=0;t<this.height;t++){this.grid[t]=[];for(let e=0;e<this.width;e++)this.grid[t][e]=P}}attachShape(){if(this.shape){for(const[t,e]of this.shape.points)this.grid[t][e]=C;this.collapse()}}collapse(){for(let t=this.grid.length-1;t>0;t--){let e=!0;for(let s=0;s<this.grid[t].length;s++)this.grid[t][s]===0&&(e=!1);if(e){this.collapsed={y:t};break}}}collapseRows(){if(!this.collapsed)return;let t=this.collapsed.y;for(;t>0;){for(let e=0;e<this.grid[t].length;e++)this.grid[t][e]=this.grid[t-1][e],this.grid[t-1][e]=0;t-=1}this.collapsed=null,this.collapse()}canPlaceShape(t){const{width:e,height:s}=this;for(let i=0;i<t.grid.length;i++)for(let r=0;r<t.grid[i].length;r++){if(t.grid[i][r]===P)continue;const h=i+t.dy,o=r+t.dx;if(o<0||o>e-1||h<0||h>s-1||this.grid[h][o]===C)return!1}return!0}}var K={exports:{}};(function(p){var t=Object.prototype.hasOwnProperty,e="~";function s(){}Object.create&&(s.prototype=Object.create(null),new s().__proto__||(e=!1));function i(f,l,c){this.fn=f,this.context=l,this.once=c||!1}function r(f,l,c,d,x){if(typeof c!="function")throw new TypeError("The listener must be a function");var m=new i(c,d||f,x),u=e?e+l:l;return f._events[u]?f._events[u].fn?f._events[u]=[f._events[u],m]:f._events[u].push(m):(f._events[u]=m,f._eventsCount++),f}function h(f,l){--f._eventsCount===0?f._events=new s:delete f._events[l]}function o(){this._events=new s,this._eventsCount=0}o.prototype.eventNames=function(){var l=[],c,d;if(this._eventsCount===0)return l;for(d in c=this._events)t.call(c,d)&&l.push(e?d.slice(1):d);return Object.getOwnPropertySymbols?l.concat(Object.getOwnPropertySymbols(c)):l},o.prototype.listeners=function(l){var c=e?e+l:l,d=this._events[c];if(!d)return[];if(d.fn)return[d.fn];for(var x=0,m=d.length,u=new Array(m);x<m;x++)u[x]=d[x].fn;return u},o.prototype.listenerCount=function(l){var c=e?e+l:l,d=this._events[c];return d?d.fn?1:d.length:0},o.prototype.emit=function(l,c,d,x,m,u){var S=e?e+l:l;if(!this._events[S])return!1;var a=this._events[S],b=arguments.length,k,g;if(a.fn){switch(a.once&&this.removeListener(l,a.fn,void 0,!0),b){case 1:return a.fn.call(a.context),!0;case 2:return a.fn.call(a.context,c),!0;case 3:return a.fn.call(a.context,c,d),!0;case 4:return a.fn.call(a.context,c,d,x),!0;case 5:return a.fn.call(a.context,c,d,x,m),!0;case 6:return a.fn.call(a.context,c,d,x,m,u),!0}for(g=1,k=new Array(b-1);g<b;g++)k[g-1]=arguments[g];a.fn.apply(a.context,k)}else{var N=a.length,E;for(g=0;g<N;g++)switch(a[g].once&&this.removeListener(l,a[g].fn,void 0,!0),b){case 1:a[g].fn.call(a[g].context);break;case 2:a[g].fn.call(a[g].context,c);break;case 3:a[g].fn.call(a[g].context,c,d);break;case 4:a[g].fn.call(a[g].context,c,d,x);break;default:if(!k)for(E=1,k=new Array(b-1);E<b;E++)k[E-1]=arguments[E];a[g].fn.apply(a[g].context,k)}}return!0},o.prototype.on=function(l,c,d){return r(this,l,c,d,!1)},o.prototype.once=function(l,c,d){return r(this,l,c,d,!0)},o.prototype.removeListener=function(l,c,d,x){var m=e?e+l:l;if(!this._events[m])return this;if(!c)return h(this,m),this;var u=this._events[m];if(u.fn)u.fn===c&&(!x||u.once)&&(!d||u.context===d)&&h(this,m);else{for(var S=0,a=[],b=u.length;S<b;S++)(u[S].fn!==c||x&&!u[S].once||d&&u[S].context!==d)&&a.push(u[S]);a.length?this._events[m]=a.length===1?a[0]:a:h(this,m)}return this},o.prototype.removeAllListeners=function(l){var c;return l?(c=e?e+l:l,this._events[c]&&h(this,c)):(this._events=new s,this._eventsCount=0),this},o.prototype.off=o.prototype.removeListener,o.prototype.addListener=o.prototype.on,o.prefixed=e,o.EventEmitter=o,p.exports=o})(K);const G=K.exports;class ${constructor(){n(this,"events",new G);n(this,"onKeyDown",t=>{const{events:e}=this;switch(t.key){case"ArrowLeft":e.emit("key",{key:"L"});break;case"ArrowRight":e.emit("key",{key:"R"});break;case"ArrowUp":e.emit("key",{key:"U"});break;case"ArrowDown":e.emit("key",{key:"D"});break;case" ":e.emit("key",{key:"S"});break}});n(this,"onKeyUp",()=>{this.events.emit("keyUp")})}init(){return document.addEventListener("keydown",this.onKeyDown),document.addEventListener("keyup",this.onKeyUp),()=>{document.removeEventListener("keydown",this.onKeyDown),document.removeEventListener("keyup",this.onKeyUp)}}}var L,T,O,R,v,w;class J{constructor({canvas:t,context:e,board:s}){n(this,"canvas");n(this,"context");n(this,"board");n(this,"size",15);_(this,L,-1);_(this,T,-1);_(this,O,1e3/30);_(this,R,0);_(this,v,15);_(this,w,15);n(this,"x0");n(this,"y0");n(this,"x1");n(this,"y1");n(this,"gap",1);n(this,"draw",()=>{var i;z(this,L,requestAnimationFrame(this.draw));const t=Date.now(),e=t-y(this,T);if(e<y(this,O))return;z(this,T,t-e%y(this,O)),z(this,R,(y(this,R)+1)%10),this.context.fillStyle="#fff",this.context.fillRect(y(this,w),y(this,v),12*20,16*30);const s=new Set(((i=this.board.shape)==null?void 0:i.points.map(([r,h])=>`${r}-${h}`))??[]);for(let r=0;r<this.board.height;r++){const h=r*this.size;for(let o=0;o<this.board.width;o++){const f=o*this.size,l=h+this.gap*r+y(this,v),c=f+this.gap*o+y(this,w);this.board.grid[r][o]===C&&(this.context.fillStyle="#000",this.context.fillRect(c,l,this.size,this.size)),s.has(`${r}-${o}`)&&(this.context.fillStyle="#9E9E9E",this.context.fillRect(c,l,this.size,this.size))}}if(this.board.collapsed){this.context.fillStyle=y(this,R)%2==0?"#9E9E9E":"#000";const r=this.board.collapsed.y,h=r*this.size+this.gap*r+y(this,v);for(let o=0;o<this.board.width;o++){const f=o*this.size+this.gap*o+y(this,w);this.context.fillRect(f,h,this.size,this.size)}}});this.canvas=t,this.context=e,this.board=s,this.x0=y(this,v)+this.gap,this.y0=y(this,w)+this.gap,this.x1=this.board.width*(this.gap+this.size)+y(this,w)*2,this.y1=this.board.height*(this.gap+this.size)+y(this,v)*2,this.context=e,this.drawGameBoard()}start(){this.draw()}stop(){cancelAnimationFrame(y(this,L))}drawGameBoard(){const{context:t,x0:e,y0:s,x1:i,y1:r}=this;this.context.fillStyle="#fff",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),t.lineWidth=.5,t.strokeStyle="#000";const h=4.5;t.beginPath(),t.moveTo(e-h,s-h),t.lineTo(e-h,r-y(this,v)+h/2),t.stroke(),t.beginPath(),t.moveTo(e-h,s-h),t.lineTo(i-y(this,w)+h/2,s-h),t.stroke(),t.beginPath(),t.moveTo(i-y(this,w)+h/2,s-h),t.lineTo(i-y(this,w)+h/2,r-y(this,v)+h/2),t.stroke(),t.beginPath(),t.moveTo(e-h,r-y(this,v)+h/2),t.lineTo(i-y(this,w)+h/2,r-y(this,v)+h/2),t.stroke()}}L=new WeakMap,T=new WeakMap,O=new WeakMap,R=new WeakMap,v=new WeakMap,w=new WeakMap;const F={0:[[1,1,1,1],[1,0,0,1],[1,0,0,1],[1,0,0,1],[1,1,1,1]],1:[[0,0,1,0],[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,1,0]],2:[[1,1,1,1],[0,0,0,1],[1,1,1,1],[1,0,0,0],[1,1,1,1]],3:[[1,1,1,1],[0,0,0,1],[1,1,1,1],[0,0,0,1],[1,1,1,1]],4:[[1,0,0,1],[1,0,0,1],[1,1,1,1],[0,0,0,1],[0,0,0,1]],5:[[1,1,1,1],[1,0,0,0],[1,1,1,1],[0,0,0,1],[1,1,1,1]],6:[[1,1,1,1],[1,0,0,0],[1,1,1,1],[1,0,0,1],[1,1,1,1]],7:[[1,1,1,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1]],8:[[1,1,1,1],[1,0,0,1],[1,1,1,1],[1,0,0,1],[1,1,1,1]],9:[[1,1,1,1],[1,0,0,1],[1,1,1,1],[0,0,0,1],[1,1,1,1]],A:[[0,1,1,0],[1,0,0,1],[1,1,1,1],[1,0,0,1],[1,0,0,1]],B:[[1,1,1,0],[1,0,0,1],[1,1,1,0],[1,0,0,1],[1,1,1,0]],C:[[0,1,1,1],[1,0,0,0],[1,0,0,0],[1,0,0,0],[0,1,1,1]],D:[[1,1,1,0],[1,0,0,1],[1,0,0,1],[1,0,0,1],[1,1,1,0]],E:[[1,1,1,1],[1,0,0,0],[1,1,1,0],[1,0,0,0],[1,1,1,1]],F:[[1,1,1,1],[1,0,0,0],[1,1,1,0],[1,0,0,0],[1,0,0,0]],G:[[0,1,1,1],[1,0,0,0],[1,0,1,1],[1,0,0,1],[0,1,1,1]],H:[[1,0,0,1],[1,0,0,1],[1,1,1,1],[1,0,0,1],[1,0,0,1]],I:[[0,1,0,0],[0,1,0,0],[0,1,0,0],[0,1,0,0],[0,1,0,0]],J:[[0,0,0,1],[0,0,0,1],[0,0,0,1],[1,0,0,1],[0,1,1,0]],K:[[1,0,0,1],[1,0,1,0],[1,1,0,0],[1,0,1,0],[1,0,0,1]],L:[[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,1,1,0]],M:[[1,0,0,1],[1,1,1,1],[1,0,0,1],[1,0,0,1],[1,0,0,1]],N:[[1,0,0,1],[1,1,0,1],[1,0,1,1],[1,0,0,1],[1,0,0,1]],O:[[0,1,1,0],[1,0,0,1],[1,0,0,1],[1,0,0,1],[0,1,1,0]],P:[[1,1,1,0],[1,0,0,1],[1,1,1,0],[1,0,0,0],[1,0,0,0]],Q:[[0,1,1,0],[1,0,0,1],[1,0,0,1],[1,0,1,1],[0,1,1,1]],R:[[1,1,1,0],[1,0,0,1],[1,1,1,0],[1,0,1,0],[1,0,0,1]],S:[[0,1,1,1],[1,0,0,0],[0,1,1,0],[0,0,0,1],[1,1,1,0]],T:[[1,1,1,0],[0,1,0,0],[0,1,0,0],[0,1,0,0],[0,1,0,0]],U:[[1,0,0,1],[1,0,0,1],[1,0,0,1],[1,0,0,1],[1,1,1,1]],V:[[1,0,1,0],[1,0,1,0],[1,0,1,0],[1,0,1,0],[0,1,0,0]],W:[[1,0,0,1],[1,0,0,1],[1,0,0,1],[1,1,1,1],[1,0,0,1]],X:[[1,0,1,0],[1,0,1,0],[0,1,0,0],[1,0,1,0],[1,0,1,0]],Y:[[1,0,1,0],[1,0,1,0],[1,1,1,0],[0,1,0,0],[0,1,0,0]],Z:[[1,1,1,1],[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,1,1,1]],".":[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,1,0,0]]," ":[[]]};class X{constructor({context:t}){n(this,"context");n(this,"size",3);n(this,"gap",0);n(this,"y0");n(this,"y1");n(this,"x0");n(this,"x1");this.context=t,this.y0=16,this.x0=15*(1+15)+15*2,this.y1=510,this.x1=15*(1+15)+15*2+140,this.drawBoard()}drawBoard(){const{y0:t,x0:e}=this;this.drawText("level".padStart(8),{y:t,x:e,color:"#999"}),this.drawText("score".padStart(8),{y:t+70,x:e,color:"#999"}),this.drawText("next".padStart(8),{y:t+140,x:e,color:"#999"}),this.drawText("records".padStart(8),{y:t+240,x:e,color:"#999"})}drawText(t,e){const{context:s}=this,{y:i,x:r,color:h="#444",size:o=3,gap:f=0,offset:l=5}=e;s.fillStyle=h;let c=0;for(let d=0;d<t.length;d++){const x=t[d].toUpperCase();if(!(x in F))throw new Error(`Symbol ${x} is not supported.`);const m=F[x];for(let u=0;u<m.length;u++){const S=u*o;for(let a=0;a<m[u].length;a++){const b=a*o;if(m[u][a]===1){const k=i+f*u+S,g=r+f*a+b+c;s.fillRect(g,k,o,o)}}}c+=(o+f)*l}}drawGameOver(){const{context:t}=this;t.fillStyle="#ddd",t.fillRect(40,190,194,34),t.fillStyle="#000",this.drawText("game over",{y:196,x:50,size:4})}updateScore(t){const{context:e,y0:s,x0:i}=this,r=String(t).padStart(8," ");e.clearRect(i,s+94,122,20),this.drawText(r,{y:s+94,x:i,color:"#000"})}updateLevel(t){const{context:e,y0:s,x0:i,size:r}=this,h=String(t).padStart(8," ");e.clearRect(i,s+24,122,20),this.drawText(h,{y:s+8*r,x:i,color:"#000"})}updateNext(t){const{context:e,y0:s,x0:i}=this,r=s+170,h=i+116,o=15,f=1,l=t.grid[0].length;e.fillStyle="#fff",e.fillRect(i,s+160,124,60),e.fillStyle="#000";for(const[c,d]of t.points)e.fillRect(h+d*(o+f)-l*(o+f),r+c*(o+f),o,o)}updateRecords(t){const{context:e,x0:s}=this;e.fillStyle="#fff",e.fillRect(s,300,130,180);let i=300;for(let r=0;r<t.length;r++){const[h,o]=t[r];this.drawText(h.padStart(12),{y:i+r*50,x:s,size:2}),this.drawText(String(o).padStart(12),{y:i+r*50+20,x:s,size:2,color:"#999"})}}}const Y=[["coolkid",1e5],["madman",5e4],["metroid",25e3],["crasher",1e4]];class q{constructor(){n(this,"records",[]);n(this,"count",4);this.records=this.read()}read(){let t=[];try{const e=localStorage.getItem("records");e&&(t=JSON.parse(e))}catch{}return t&&t.length?t:Y}save(){localStorage.setItem("records",JSON.stringify(this.records))}isRecord(t){const e=Math.min(...this.records.map(s=>s[1]));return t>=e}saveRecord(t){const e=prompt("Congratulations! Write your nickname.")??"anonymous";let s=-1;for(let i=this.records.length-1;i>=0;i--)if(t<this.records[i][1]){s=i+1;break}for(this.records.splice(s,0,[e,t]);this.records.length>this.count;)this.records.pop();this.save()}}class W{constructor(t){n(this,"grid");n(this,"dy",0);n(this,"dx",0);this.grid=t.map(e=>[...e])}get points(){const t=[];for(let e=0;e<this.grid.length;e++)for(let s=0;s<this.grid.length;s++)this.grid[e][s]===1&&t.push([e+this.dy,s+this.dx]);return t}move({dy:t=0,dx:e=0}){this.dy+=t,this.dx+=e}rotate(t=!0){const e=this.grid.length;for(let s=0;s<e;s++)for(let i=s;i<e;i++){const r=this.grid[s][i];this.grid[s][i]=this.grid[i][s],this.grid[i][s]=r}if(t)for(let s=0;s<this.grid.length;s++)for(let i=0;i<Math.floor(this.grid[0].length/2);i++){const r=this.grid[s][i];this.grid[s][i]=this.grid[s][this.grid[0].length-1-i],this.grid[s][this.grid[0].length-1-i]=r}else for(let s=0;s<this.grid[0].length;s++)for(let i=0;i<Math.floor(this.grid.length/2);i++){const r=this.grid[i][s];this.grid[i][s]=this.grid[this.grid.length-1-i][s],this.grid[this.grid.length-1-i][s]=r}}}const M={J:[[0,1,0],[0,1,0],[1,1,0]],I:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],O:[[1,1],[1,1]],L:[[0,1,0],[0,1,0],[0,1,1]],Z:[[1,1,0],[0,1,1],[0,0,0]],T:[[0,1,0],[1,1,1],[0,0,0]],S:[[0,1,1],[1,1,0],[0,0,0]]};function j(p){return new W(M[p])}function I(){const p=Math.floor(Math.random()*7),t=Object.keys(M)[p];return j(t)}class Z{constructor({canvas:t}){n(this,"board");n(this,"renderer");n(this,"keyboard");n(this,"panel");n(this,"records");n(this,"frameId",-1);n(this,"timestamp",-1);n(this,"speedModifier",5);n(this,"animationFrames",null);n(this,"ticks",0);n(this,"collapseCount",0);n(this,"score",0);n(this,"level",1);n(this,"nextShape");n(this,"currentShape",null);n(this,"onKey",({key:t})=>{if(t==="L"||t=="R"){const e=t==="L"?-1:1;this.currentShape&&(this.currentShape.move({dx:e}),this.board.canPlaceShape(this.currentShape)||this.currentShape.move({dx:-e}))}else t==="U"?this.currentShape&&(this.currentShape.rotate(!0),this.board.canPlaceShape(this.currentShape)||this.currentShape.rotate(!1)):t==="D"&&this.currentShape&&(this.currentShape.move({dy:1}),this.board.canPlaceShape(this.currentShape)||this.currentShape.move({dy:-1}))});n(this,"tick",()=>{this.frameId=requestAnimationFrame(this.tick);const t=Date.now(),e=t-this.timestamp;if(!(e<this.speed)){if(this.timestamp=t-e%this.speed,this.ticks+=1,[100,500,1e3,2500,5e3,7500,1e4,15e3,2e4].includes(this.ticks)&&(this.level+=1,this.speedModifier+=1,this.panel.updateLevel(this.level)),this.board.collapsed){this.animationFrames===null&&(this.animationFrames=3),this.animationFrames-=1,this.animationFrames===0&&(this.animationFrames=null,this.board.collapseRows(),this.collapseCount+=1,this.score+=100*this.collapseCount*this.level);return}if(this.collapseCount=0,!this.currentShape){this.currentShape=this.nextShape,this.nextShape=I(),this.panel.updateNext(this.nextShape),this.currentShape.move({dy:0,dx:Math.floor(this.board.width/2)-Math.floor(this.currentShape.grid.length/2)}),this.board.shape=this.currentShape;return}this.currentShape.move({dy:1}),this.board.canPlaceShape(this.currentShape)?this.score+=this.level:(this.currentShape.move({dy:-1}),this.currentShape.dy===0?(this.stop(),this.renderer.stop(),this.panel.drawGameOver(),this.records.isRecord(this.score)&&(this.records.saveRecord(this.score),this.panel.updateRecords(this.records.records))):(this.board.attachShape(),this.board.shape=null,this.currentShape=null,this.score+=this.level*10)),this.panel.updateScore(this.score)}});const e=t.getContext("2d");if(!e)throw new Error("Can not get a canvas context.");this.board=new B,this.renderer=new J({board:this.board,canvas:t,context:e}),this.panel=new X({context:e}),this.records=new q,this.keyboard=new $,this.nextShape=I()}get speed(){return 1e3/this.speedModifier}init(){const{keyboard:t,renderer:e}=this,s=t.init();return t.events.on("key",this.onKey),e.start(),this.start(),this.panel.updateLevel(this.level),this.panel.updateRecords(this.records.records),()=>{s(),t.events.off("key",this.onKey),cancelAnimationFrame(this.frameId),e.stop(),this.stop()}}start(){this.tick()}stop(){cancelAnimationFrame(this.frameId)}}const H=new Z({canvas:document.getElementById("canvas")});H.init();
